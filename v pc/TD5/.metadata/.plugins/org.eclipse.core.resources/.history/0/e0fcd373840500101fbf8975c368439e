import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.*;

public class NOT extends AbstractComponent {
    private java.awt.Point inputPort;
    private java.awt.Point outputPort;
    private boolean selected = false;

    public NOT() {
        super("NOT");
        setPreferredSize(new Dimension(100, 60));
        
        inputPort = new java.awt.Point(0, getHeight() / 2);
        outputPort = new java.awt.Point(getWidth(), getHeight() / 2);
        
        addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Vérifier si l'utilisateur clique sur un port
                if (isOverPort(e.getPoint(), inputPort)) {
                    System.out.println("Entrée du NOT sélectionnée !");
                } else if (isOverPort(e.getPoint(), outputPort)) {
                    System.out.println("Sortie du NOT sélectionnée !");
                }
            }
        });
    }

    private boolean isOverPort(java.awt.Point click, java.awt.Point port) {
        return click.distance(port) < 10; // Si le clic est proche du port
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.setColor(Color.BLACK);
        g.drawRect(0, 0, getWidth(), getHeight());

        g.setColor(Color.RED);
        g.fillOval(inputPort.x - 5, inputPort.y - 5, 10, 10); // Dessine le port d’entrée
        g.setColor(Color.GREEN);
        g.fillOval(outputPort.x - 5, outputPort.y - 5, 10, 10); // Dessine le port de sortie
    }

    public java.awt.Point getInputPort() {
        return inputPort;
    }

    public java.awt.Point getOutputPort() {
        return outputPort;
    }
}
