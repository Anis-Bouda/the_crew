import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class NOT extends AbstractComponent {
    private Point inputPort;
    private Point outputPort;
    private boolean selected = false; // Indique si le composant est sélectionné

    public NOT() {
        super("NOT");
        setPreferredSize(new Dimension(100, 60));

        // Définir les positions des ports
        inputPort = new Point(0, getHeight() / 2);
        outputPort = new Point(getWidth(), getHeight() / 2);

        // Ajouter un écouteur de souris pour détecter les clics sur le composant
        addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Vérifier si on clique sur un port d'entrée ou sortie
                if (isPortClicked(e.getPoint(), inputPort)) {
                    System.out.println("Port d'entrée sélectionné");
                    MainLayout.startConnection(NOT.this, inputPort);
                } else if (isPortClicked(e.getPoint(), outputPort)) {
                    System.out.println("Port de sortie sélectionné");
                    MainLayout.startConnection(NOT.this, outputPort);
                }
            }
        });
    }

    private boolean isPortClicked(Point click, Point port) {
        int radius = 10; // Rayon de la zone cliquable du port
        return click.distance(port) <= radius;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setColor(Color.BLACK);
        g2d.drawRect(0, 0, getWidth() - 1, getHeight() - 1);

        // Dessiner les ports
        g2d.setColor(Color.RED);
        g2d.fillOval(inputPort.getX() - 5, inputPort.getY() - 5, 10, 10); // Port entrée
        g2d.fillOval(outputPort.getX() - 5, outputPort.getY() - 5, 10, 10); // Port sortie
    }

    public Point getInputPort() {
        return inputPort;
    }

    public Point getOutputPort() {
        return outputPort;
    }
}
