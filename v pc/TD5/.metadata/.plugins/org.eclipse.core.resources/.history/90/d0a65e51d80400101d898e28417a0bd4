import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

public class CustomCanvas extends JPanel {
    private MainLayout mainLayout; // R√©f√©rence pour mettre √† jour les propri√©t√©s
    private ArrayList<ComponentShape> components;

    public CustomCanvas(MainLayout layout) {
        this.mainLayout = layout;
        components = new ArrayList<>();
        setBackground(Color.WHITE);

        addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                int x = e.getX();
                int y = e.getY();
                String type = "AND"; // Exemple, on pourrait d√©tecter le vrai type

                components.add(new ComponentShape(x, y, type));
                mainLayout.updateProperties(x, y, type); // üõ†Ô∏è Met √† jour propertiesArea
                repaint();
            }
        });
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        for (ComponentShape comp : components) {
            comp.draw(g);
        }
    }

    private static class ComponentShape {
        int x, y;
        String type;

        public ComponentShape(int x, int y, String type) {
            this.x = x;
            this.y = y;
            this.type = type;
        }

        public void draw(Graphics g) {
            g.setColor(Color.BLUE);
            g.fillRect(x - 20, y - 10, 40, 20);
            g.setColor(Color.WHITE);
            g.drawString(type, x - 15, y + 5);
        }
    }
}
