import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ComposantToolBar extends JToolBar {

    public ComposantToolBar() {
        // ðŸ”¹ DÃ©finition de la barre d'outils
        setFloatable(false); // EmpÃªcher le dÃ©placement de la barre

        // ðŸ”¹ CrÃ©ation des boutons avec icÃ´nes
        JButton btnRun = createToolButton("/icons1/about.png", "Lancer la simulation");
        JButton btnStop = createToolButton("/icons1/about.png", "ArrÃªter la simulation");
        JButton btnSave = createToolButton("/icons1/about.png", "Enregistrer le circuit");
        JButton btnOpen = createToolButton("/icons1/about.png", "Ouvrir un fichier");
        JButton btnExit = createToolButton("/icons1/about.png", "Quitter lâ€™application");

        // ðŸ”¹ Ajout d'un sÃ©parateur pour l'organisation
        add(btnRun);
        add(btnStop);
        addSeparator();
        add(btnSave);
        add(btnOpen);
        addSeparator();
        add(btnExit);

        // ðŸ”¹ Ajout d'actions aux boutons
        btnRun.addActionListener(e -> JOptionPane.showMessageDialog(null, "Simulation en cours..."));
        btnStop.addActionListener(e -> JOptionPane.showMessageDialog(null, "Simulation arrÃªtÃ©e."));
        btnSave.addActionListener(e -> JOptionPane.showMessageDialog(null, "Circuit enregistrÃ© !"));
        btnOpen.addActionListener(e -> JOptionPane.showMessageDialog(null, "Ouverture du fichier..."));
        btnExit.addActionListener(e -> System.exit(0));
    }

    // ðŸ”¹ MÃ©thode pour crÃ©er un bouton avec une icÃ´ne
    private JButton createToolButton(String iconPath, String tooltip) {
        JButton button = new JButton(new ImageIcon(getClass().getResource(iconPath)));
        button.setToolTipText(tooltip); // Afficher une info-bulle au survol
        button.setFocusPainted(false);
        return button;
    }
}
